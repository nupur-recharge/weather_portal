{"ast":null,"code":"var _jsxFileName = \"/home/nupur.majumar/Desktop/weather_portal/src/component/share/dropdown.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Menu, Dropdown, Button, message, Space, Tooltip } from \"antd\";\nimport { DownOutlined, UserOutlined } from \"@ant-design/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DropDown = _ref => {\n  _s();\n\n  let {\n    DropDownText,\n    Item\n  } = _ref;\n  const [item, setItem] = useState(Item);\n  let menu; // console.log(\"menue\",Item)\n\n  const handleButtonClick = e => {\n    message.info(\"Click on left button.\");\n    console.log(\"click left button\", e);\n  };\n\n  const handleMenuClick = e => {\n    message.info(\"Click on menu item.\"); // console.log(\"click\", e);\n  };\n\n  let test = [Item];\n  useEffect(() => {\n    console.log(Array.isArray([Item])); // let test = [Item];\n\n    menu = /*#__PURE__*/_jsxDEV(Menu, {\n      children: //   console.log(\"Item\",Item)\n      test.map(result => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Menu.Item, {\n            icon: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 47\n            }, this),\n            children: [result, console.log(\"result\", result)]\n          }, result, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this)\n        }, void 0, false);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }, [Item !== undefined && Item.length > 0]);\n  return /*#__PURE__*/_jsxDEV(Space, {\n    wrap: true,\n    children: /*#__PURE__*/_jsxDEV(Dropdown.Button, {\n      // onClick={handleButtonClick}\n      overlay: menu !== undefined && menu,\n      children: DropDownText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DropDown, \"1/8z9VPD7JT6QqVWIEDopWpGVAc=\");\n\n_c = DropDown;\nexport default DropDown;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropDown\");","map":{"version":3,"sources":["/home/nupur.majumar/Desktop/weather_portal/src/component/share/dropdown.js"],"names":["React","useEffect","useState","Menu","Dropdown","Button","message","Space","Tooltip","DownOutlined","UserOutlined","DropDown","DropDownText","Item","item","setItem","menu","handleButtonClick","e","info","console","log","handleMenuClick","test","Array","isArray","map","result","undefined","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,MAAzB,EAAiCC,OAAjC,EAA0CC,KAA1C,EAAiDC,OAAjD,QAAgE,MAAhE;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,mBAA3C;;;;AAEA,MAAMC,QAAQ,GAAG,QAA2B;AAAA;;AAAA,MAA1B;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,GAA0B;AAC1C,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBb,QAAQ,CAACW,IAAD,CAA/B;AACA,MAAIG,IAAJ,CAF0C,CAG1C;;AACA,QAAMC,iBAAiB,GAAIC,CAAD,IAAO;AAC/BZ,IAAAA,OAAO,CAACa,IAAR,CAAa,uBAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCH,CAAjC;AACD,GAHD;;AAKA,QAAMI,eAAe,GAAIJ,CAAD,IAAO;AAC7BZ,IAAAA,OAAO,CAACa,IAAR,CAAa,qBAAb,EAD6B,CAE7B;AACD,GAHD;;AAMA,MAAII,IAAI,GAAG,CAACV,IAAD,CAAX;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,OAAO,CAACC,GAAR,CAAYG,KAAK,CAACC,OAAN,CAAc,CAACZ,IAAD,CAAd,CAAZ,EADc,CAGd;;AAEAG,IAAAA,IAAI,gBAEF,QAAC,IAAD;AAAA,gBAEI;AAEAO,MAAAA,IAAI,CAACG,GAAL,CAAUC,MAAD,IAAY;AACjB,4BACE;AAAA,iCACA,QAAC,IAAD,CAAM,IAAN;AAAwB,YAAA,IAAI,eAAE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,oBAA9B;AAAA,uBACGA,MADH,EAEGP,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBM,MAArB,CAFH;AAAA,aAAgBA,MAAhB;AAAA;AAAA;AAAA;AAAA;AADA,yBADF;AAWH,OAZD;AAJJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAiCD,GAtCQ,EAsCN,CAACd,IAAI,KAAKe,SAAT,IAAsBf,IAAI,CAACgB,MAAL,GAAc,CAArC,CAtCM,CAAT;AAwCA,sBACE,QAAC,KAAD;AAAO,IAAA,IAAI,MAAX;AAAA,2BACE,QAAC,QAAD,CAAU,MAAV;AACE;AACA,MAAA,OAAO,EAAEb,IAAI,KAAKY,SAAT,IAAsBZ,IAFjC;AAAA,gBAIGJ;AAJH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAlED;;GAAMD,Q;;KAAAA,Q;AAoEN,eAAeA,QAAf","sourcesContent":["import React, { useEffect,useState} from \"react\";\nimport { Menu, Dropdown, Button, message, Space, Tooltip } from \"antd\";\nimport { DownOutlined, UserOutlined } from \"@ant-design/icons\";\n\nconst DropDown = ({ DropDownText, Item}) => {\n  const [item,setItem] = useState(Item)\n  let menu;\n  // console.log(\"menue\",Item)\n  const handleButtonClick = (e) => {\n    message.info(\"Click on left button.\");\n    console.log(\"click left button\", e);\n  };\n\n  const handleMenuClick = (e) => {\n    message.info(\"Click on menu item.\");\n    // console.log(\"click\", e);\n  };\n\n \n  let test = [Item];\n  useEffect(() => {\n    console.log(Array.isArray([Item]))\n   \n    // let test = [Item];\n    \n    menu = (\n        \n      <Menu >\n        {\n          //   console.log(\"Item\",Item)\n\n          test.map((result) => {\n              return(\n                <>\n                <Menu.Item key={result} icon={<UserOutlined />}>\n                  {result}\n                  {console.log(\"result\",result)}\n                </Menu.Item>\n              </>\n              \n\n              )\n            \n          })\n          \n        }\n\n        {/* <Menu.Item key=\"1\" icon={<UserOutlined />}>\n            1st menu item\n          </Menu.Item>\n          <Menu.Item key=\"2\" icon={<UserOutlined />}>\n            2nd menu item\n          </Menu.Item>\n          <Menu.Item key=\"3\" icon={<UserOutlined />}>\n            3rd menu item\n          </Menu.Item> */}\n      </Menu>\n    );\n  }, [Item !== undefined && Item.length > 0]);\n\n  return (\n    <Space wrap>\n      <Dropdown.Button\n        // onClick={handleButtonClick}\n        overlay={menu !== undefined && menu}\n      >\n        {DropDownText}\n      </Dropdown.Button>\n    </Space>\n  );\n};\n\nexport default DropDown;\n"]},"metadata":{},"sourceType":"module"}