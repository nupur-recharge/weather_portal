{"ast":null,"code":"var _jsxFileName = \"/home/nupur.majumar/Desktop/weather_portal/src/component/weatherForcast.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Collapse } from \"antd\";\nimport { getWeather } from \"../API/api-services\";\nimport DropDown from './share/dropdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Panel\n} = Collapse;\n\nfunction callback(key) {\n  console.log(key);\n}\n\nconst text = `\n  A dog is a type of domesticated animal.\n  Known for its loyalty and faithfulness,\n  it can be found as a welcome guest in many households across the world.\n`;\n\nconst CurrentWeatherForcst = _ref => {\n  _s();\n\n  let {} = _ref;\n  const [item, setItem] = useState([\"current\"]);\n  const [location, setLocation] = useState(\"\");\n  const [cloudes, setCloudes] = useState(\"\");\n  const [temp, setTemp] = useState(\"\");\n  const [windSpeed, setwindSpeed] = useState(\"\");\n  const [currWeatherData, setcurrWeatherData] = useState(\"\");\n  const [dailyWeatherData, setcurrdailyWeatherData] = useState(\"\");\n\n  const success = position => {\n    const latitude = position.coords.latitude;\n    const longitude = position.coords.longitude;\n    let queryParams = {};\n    queryParams.lat = latitude;\n    queryParams.lon = longitude;\n    getWeather(queryParams).then(response => {\n      setLocation(response.data.timezone);\n      console.log(\"response\", response);\n    }).catch(error => {\n      console.log(error);\n    });\n    console.log(latitude, longitude);\n  };\n\n  const error = () => {\n    alert(\"Unable to retrieve your location\");\n  };\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(success, error);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DropDown, {\n      DropDownText: \"Current\",\n      Item: item\n    }, \"curr\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DropDown, {\n      DropDownText: \"Daily\"\n    }, \"daily\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DropDown, {\n      DropDownText: \"Weekly\"\n    }, \"weekly\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n      onChange: callback,\n      children: [/*#__PURE__*/_jsxDEV(Panel, {\n        header: \"This is panel header 2\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, \"2\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Panel, {\n        header: \"This is panel header 3\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, \"3\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CurrentWeatherForcst, \"U8FV19a3f4GEQFU24d+3qnmAYis=\");\n\n_c = CurrentWeatherForcst;\nexport default CurrentWeatherForcst;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrentWeatherForcst\");","map":{"version":3,"sources":["/home/nupur.majumar/Desktop/weather_portal/src/component/weatherForcast.js"],"names":["React","useEffect","useState","Collapse","getWeather","DropDown","Panel","callback","key","console","log","text","CurrentWeatherForcst","item","setItem","location","setLocation","cloudes","setCloudes","temp","setTemp","windSpeed","setwindSpeed","currWeatherData","setcurrWeatherData","dailyWeatherData","setcurrdailyWeatherData","success","position","latitude","coords","longitude","queryParams","lat","lon","then","response","data","timezone","catch","error","alert","navigator","geolocation","getCurrentPosition"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,MAAzB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAOC,QAAP,MAAqB,kBAArB;;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAYH,QAAlB;;AACA,SAASI,QAAT,CAAkBC,GAAlB,EAAuB;AACrBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;;AACD,MAAMG,IAAI,GAAI;AACd;AACA;AACA;AACA,CAJA;;AAKA,MAAMC,oBAAoB,GAAG,QAAQ;AAAA;;AAAA,MAAP,EAAO;AACnC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,CAAC,SAAD,CAAD,CAAhC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACiB,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACmB,SAAD,EAAYC,YAAZ,IAA4BpB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACqB,eAAD,EAAkBC,kBAAlB,IAAwCtB,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACuB,gBAAD,EAAmBC,uBAAnB,IAA8CxB,QAAQ,CAAC,EAAD,CAA5D;;AAEA,QAAMyB,OAAO,GAAIC,QAAD,IAAc;AAC5B,UAAMC,QAAQ,GAAGD,QAAQ,CAACE,MAAT,CAAgBD,QAAjC;AACA,UAAME,SAAS,GAAGH,QAAQ,CAACE,MAAT,CAAgBC,SAAlC;AAEA,QAAIC,WAAW,GAAG,EAAlB;AACAA,IAAAA,WAAW,CAACC,GAAZ,GAAkBJ,QAAlB;AACAG,IAAAA,WAAW,CAACE,GAAZ,GAAkBH,SAAlB;AAEA3B,IAAAA,UAAU,CAAC4B,WAAD,CAAV,CACGG,IADH,CACSC,QAAD,IAAc;AAClBpB,MAAAA,WAAW,CAACoB,QAAQ,CAACC,IAAT,CAAcC,QAAf,CAAX;AACA7B,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB0B,QAAxB;AACD,KAJH,EAKGG,KALH,CAKUC,KAAD,IAAW;AAChB/B,MAAAA,OAAO,CAACC,GAAR,CAAY8B,KAAZ;AACD,KAPH;AASA/B,IAAAA,OAAO,CAACC,GAAR,CAAYmB,QAAZ,EAAsBE,SAAtB;AACD,GAlBD;;AAmBA,QAAMS,KAAK,GAAG,MAAM;AAClBC,IAAAA,KAAK,CAAC,kCAAD,CAAL;AACD,GAFD;;AAIAxC,EAAAA,SAAS,CAAC,MAAM;AACdyC,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCjB,OAAzC,EAAkDa,KAAlD;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA,4BACE,QAAC,QAAD;AAAuB,MAAA,YAAY,EAAC,SAApC;AAA8C,MAAA,IAAI,EAAE3B;AAApD,OAAgB,MAAhB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AAAwB,MAAA,YAAY,EAAC;AAArC,OAAgB,OAAhB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,QAAD;AAAyB,MAAA,YAAY,EAAC;AAAtC,OAAgB,QAAhB;AAAA;AAAA;AAAA;AAAA,YAHF,eAKE,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEN,QAApB;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,MAAM,EAAC,wBAAd;AAAA,+BACE;AAAA,oBAAII;AAAJ;AAAA;AAAA;AAAA;AAAA;AADF,SAA2C,GAA3C;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,KAAD;AAAO,QAAA,MAAM,EAAC,wBAAd;AAAA,+BACE;AAAA,oBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA;AADF,SAA2C,GAA3C;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AAgBD,CApDD;;GAAMC,oB;;KAAAA,oB;AAqDN,eAAeA,oBAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Collapse } from \"antd\";\nimport { getWeather } from \"../API/api-services\";\nimport DropDown from './share/dropdown'\nconst { Panel } = Collapse;\nfunction callback(key) {\n  console.log(key);\n}\nconst text = `\n  A dog is a type of domesticated animal.\n  Known for its loyalty and faithfulness,\n  it can be found as a welcome guest in many households across the world.\n`;\nconst CurrentWeatherForcst = ({}) => {\n  const [item, setItem] = useState([\"current\"]);  \n  const [location, setLocation] = useState(\"\");\n  const [cloudes, setCloudes] = useState(\"\");\n  const [temp, setTemp] = useState(\"\");\n  const [windSpeed, setwindSpeed] = useState(\"\");\n  const [currWeatherData, setcurrWeatherData] = useState(\"\");\n  const [dailyWeatherData, setcurrdailyWeatherData] = useState(\"\");\n\n  const success = (position) => {\n    const latitude = position.coords.latitude;\n    const longitude = position.coords.longitude;\n\n    let queryParams = {};\n    queryParams.lat = latitude;\n    queryParams.lon = longitude;\n\n    getWeather(queryParams)\n      .then((response) => {\n        setLocation(response.data.timezone);\n        console.log(\"response\", response);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n    console.log(latitude, longitude);\n  };\n  const error = () => {\n    alert(\"Unable to retrieve your location\");\n  };\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(success, error);\n  }, []);\n\n  return (\n    <>\n      <DropDown key = \"curr\" DropDownText=\"Current\" Item={item}/>\n      <DropDown key = \"daily\" DropDownText=\"Daily\" />\n      <DropDown key = \"weekly\" DropDownText=\"Weekly\" />\n\n      <Collapse onChange={callback}>\n        <Panel header=\"This is panel header 2\" key=\"2\">\n          <p>{text}</p>\n        </Panel>\n        <Panel header=\"This is panel header 3\" key=\"3\">\n          <p>{text}</p>\n        </Panel>\n      </Collapse>\n    </>\n  );\n};\nexport default CurrentWeatherForcst;\n"]},"metadata":{},"sourceType":"module"}