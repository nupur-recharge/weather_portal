{"ast":null,"code":"var _jsxFileName = \"/home/nupur.majumar/Desktop/weather_portal/src/component/weatherForcast.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Collapse } from \"antd\";\nimport { getWeather } from \"../API/api-services\";\nimport DropDown from \"./share/dropdown\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Panel\n} = Collapse;\n\nfunction callback(key) {\n  console.log(key);\n}\n\nconst text = `\n  A dog is a type of domesticated animal.\n  Known for its loyalty and faithfulness,\n  it can be found as a welcome guest in many households across the world.\n`;\n\nconst CurrentWeatherForcst = _ref => {\n  _s();\n\n  let {} = _ref;\n  const [curentItem, setCurentItem] = useState([\"current\"]);\n  const [dailyItem, setDailyItem] = useState([]);\n  const [header, setHeader] = useState(\"current\");\n  const [location, setLocation] = useState(\"\");\n  const [cloudes, setCloudes] = useState(\"\");\n  const [temp, setTemp] = useState(\"\");\n  const [windSpeed, setwindSpeed] = useState(\"\");\n  const [sunset, setSunset] = useState(\"\");\n  const [sunrise, setSunrise] = useState(\"\");\n  const [dailyData, setDailyDate] = useState(\"\");\n  const [currWeatherData, setcurrWeatherData] = useState(\"\");\n  const [dailyWeatherData, setcurrdailyWeatherData] = useState(\"\");\n\n  const callbackForMenu = data => {\n    // console.log(\"data\", data);\n    if (data.key !== \"current\" || data.key !== \"weekly\") {\n      setHeader(\"Daily\");\n      setDailyDate(data.key);\n      let relatedNoOfDay = getArrayIndexForDay(dailyData.key);\n      dailyWeatherData[relatedNoOfDay];\n      let event1 = new Date(dailyWeatherData[relatedNoOfDay].sunrise);\n      let event2 = new Date(dailyWeatherData[relatedNoOfDay].sunset);\n      console.log(\"daily\", response.data.daily);\n      setDailyItem(ItemArray);\n      setTemp(Math.round(dailyWeatherData[relatedNoOfDay].temp));\n      setCloudes(dailyWeatherData[relatedNoOfDay].clouds);\n      setwindSpeed(dailyWeatherData[relatedNoOfDay].wind_speed);\n      setSunrise(event1.toLocaleTimeString('en-US'));\n      setSunset(event2.toLocaleTimeString('en-US'));\n    } else {\n      setHeader(data.key);\n    } // navigator.geolocation.getCurrentPosition(success, error);\n\n  };\n\n  const GetDaYForDalilyData = (n, d) => {\n    let day;\n\n    switch (n) {\n      case 0:\n        day = \"Sunday\" + \" \" + String(d.getDate()).padStart(2, \"0\");\n        return day;\n\n      case 1:\n        day = \"Monday\" + \" \" + String(d.getDate()).padStart(2, \"0\");\n        return day;\n\n      case 2:\n        day = \"Tuesday\" + \" \" + String(d.getDate()).padStart(2, \"0\");\n        return day;\n\n      case 3:\n        day = \"Wednesday\" + \" \" + String(d.getDate()).padStart(2, \"0\");\n        return day;\n\n      case 4:\n        day = \"Thursday\" + \" \" + String(d.getDate()).padStart(2, \"0\");\n        return day;\n\n      case 5:\n        day = \"Friday\" + \" \" + String(d.getDate()).padStart(2, \"0\");\n        return day;\n\n      case 6:\n        day = \"Saturday\" + \" \" + String(d.getDate()).padStart(2, \"0\");\n        return day;\n    }\n  };\n\n  const getArrayIndexForDay = data => {\n    if (data.include(\"Sunday\")) {\n      return 0;\n    } else if (data.include(\"Monday\")) {\n      return 1;\n    } else if (data.include(\"Tuesday\")) {\n      return 2;\n    } else if (data.include(\"Wednesday\")) {\n      return 3;\n    } else if (data.include(\"Thursday\")) {\n      return 4;\n    } else if (data.include(\"Friday\")) {\n      return 5;\n    } else if (data.include(\"Saturday\")) {\n      return 6;\n    }\n  };\n\n  const success = position => {\n    const latitude = position.coords.latitude;\n    const longitude = position.coords.longitude;\n    let ItemArray = [];\n    let queryParams = {};\n    queryParams.lat = latitude;\n    queryParams.lon = longitude;\n    let d;\n    let n;\n    let day;\n    let event1;\n    let event2;\n    getWeather(queryParams).then(response => {\n      setLocation(response.data.timezone);\n      response.data.daily.map((result, i) => {\n        d = new Date(result.dt * 1000);\n        n = d.getDay();\n        day = GetDaYForDalilyData(n, d);\n\n        if (i !== 7) {\n          ItemArray.push(day);\n        }\n      });\n\n      if (header === \"current\") {\n        event1 = new Date(response.data.current.sunrise);\n        event2 = new Date(response.data.current.sunset);\n        setDailyItem(ItemArray);\n        setTemp(Math.round(response.data.current.temp));\n        setCloudes(response.data.current.clouds);\n        setwindSpeed(response.data.current.wind_speed);\n        setSunrise(event1.toLocaleTimeString('en-US'));\n        setSunset(event2.toLocaleTimeString('en-US'));\n      } else if (header !== \"current\" && header !== \"weekly\") {\n        console.log(\"test\", dailyData);\n        let relatedNoOfDay = getArrayIndexForDay(dailyData.key);\n        setcurrdailyWeatherData(response.data.daily); // event1 = new Date(response.data.daily[relatedNoOfDay].sunrise)\n        // event2 = new Date(response.data.daily[relatedNoOfDay].sunset);\n        // console.log(\"daily\",response.data.daily)\n        // setDailyItem(ItemArray);\n        // setTemp(Math.round(response.data.daily[relatedNoOfDay].temp))\n        // setCloudes(response.data.daily[relatedNoOfDay].clouds)\n        // setwindSpeed(response.data.daily[relatedNoOfDay].wind_speed)\n        // setSunrise(event1.toLocaleTimeString('en-US'))\n        // setSunset(event2.toLocaleTimeString('en-US'))\n      }\n\n      console.log(\"response\", Math.round(response.data.current.temp));\n      console.log(\"ItemArray\", ItemArray);\n    }).catch(error => {\n      console.log(error);\n    });\n    console.log(latitude, longitude);\n  };\n\n  const error = () => {\n    alert(\"Unable to retrieve your location\");\n  };\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(success, error);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DropDown, {\n      DropDownText: \"Current\",\n      Item: curentItem,\n      callbackForMenu: data => {\n        callbackForMenu(data);\n      }\n    }, \"current\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DropDown, {\n      DropDownText: \"Daily\",\n      Item: dailyItem,\n      callbackForMenu: data => {\n        callbackForMenu(data);\n      }\n    }, \"daily\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DropDown, {\n      DropDownText: \"Weekly\"\n    }, \"weekly\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: location\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n      onChange: callback,\n      children: header === \"current\" ? /*#__PURE__*/_jsxDEV(Panel, {\n        header: header[0].toUpperCase() + header.slice(1).toLowerCase(),\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"temp\" + \" \" + temp + \"C\" + \"  \" + \"Cloude\" + \" \" + cloudes + \"  \" + \"Sunrise\" + \" \" + sunrise + \"  \" + \"Sunset\" + \"  \" + sunset + \"  \" + \"wind Speed\" + \"  \" + windSpeed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this)\n      }, \"2\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this) : header === \"weekly\" ? \"\" : /*#__PURE__*/_jsxDEV(Panel, {\n        header: header[0].toUpperCase() + header.slice(1).toLowerCase(),\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"temp\" + \" \" + temp + \"C\" + \"  \" + \"Cloude\" + \" \" + cloudes + \"  \" + \"Sunrise\" + \" \" + sunrise + \"  \" + \"Sunset\" + \"  \" + sunset + \"  \" + \"wind Speed\" + \"  \" + windSpeed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 17\n        }, this)\n      }, \"2\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CurrentWeatherForcst, \"/dYKDS4Ll0mhmWzXkgKfp05GtYA=\");\n\n_c = CurrentWeatherForcst;\nexport default CurrentWeatherForcst;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrentWeatherForcst\");","map":{"version":3,"sources":["/home/nupur.majumar/Desktop/weather_portal/src/component/weatherForcast.js"],"names":["React","useEffect","useState","Collapse","getWeather","DropDown","Panel","callback","key","console","log","text","CurrentWeatherForcst","curentItem","setCurentItem","dailyItem","setDailyItem","header","setHeader","location","setLocation","cloudes","setCloudes","temp","setTemp","windSpeed","setwindSpeed","sunset","setSunset","sunrise","setSunrise","dailyData","setDailyDate","currWeatherData","setcurrWeatherData","dailyWeatherData","setcurrdailyWeatherData","callbackForMenu","data","relatedNoOfDay","getArrayIndexForDay","event1","Date","event2","response","daily","ItemArray","Math","round","clouds","wind_speed","toLocaleTimeString","GetDaYForDalilyData","n","d","day","String","getDate","padStart","include","success","position","latitude","coords","longitude","queryParams","lat","lon","then","timezone","map","result","i","dt","getDay","push","current","catch","error","alert","navigator","geolocation","getCurrentPosition","toUpperCase","slice","toLowerCase"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,MAAzB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAOC,QAAP,MAAqB,kBAArB;;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAYH,QAAlB;;AACA,SAASI,QAAT,CAAkBC,GAAlB,EAAuB;AACrBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;;AACD,MAAMG,IAAI,GAAI;AACd;AACA;AACA;AACA,CAJA;;AAKA,MAAMC,oBAAoB,GAAG,QAAQ;AAAA;;AAAA,MAAP,EAAO;AACnC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,CAAC,SAAD,CAAD,CAA5C;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACe,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,SAAD,CAApC;AACA,QAAM,CAACiB,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACmB,OAAD,EAAUC,UAAV,IAAwBpB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACqB,IAAD,EAAOC,OAAP,IAAkBtB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACuB,SAAD,EAAYC,YAAZ,IAA4BxB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACyB,MAAD,EAASC,SAAT,IAAsB1B,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAAC2B,OAAD,EAAUC,UAAV,IAAwB5B,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAAC6B,SAAD,EAAYC,YAAZ,IAA4B9B,QAAQ,CAAC,EAAD,CAA1C;AAGA,QAAM,CAAC+B,eAAD,EAAkBC,kBAAlB,IAAwChC,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACiC,gBAAD,EAAmBC,uBAAnB,IAA8ClC,QAAQ,CAAC,EAAD,CAA5D;;AAEA,QAAMmC,eAAe,GAAIC,IAAD,IAAU;AAChC;AACA,QAAGA,IAAI,CAAC9B,GAAL,KAAa,SAAb,IAA0B8B,IAAI,CAAC9B,GAAL,KAAa,QAA1C,EAAmD;AAC/CU,MAAAA,SAAS,CAAC,OAAD,CAAT;AACAc,MAAAA,YAAY,CAACM,IAAI,CAAC9B,GAAN,CAAZ;AACA,UAAI+B,cAAc,GAAGC,mBAAmB,CAACT,SAAS,CAACvB,GAAX,CAAxC;AACA2B,MAAAA,gBAAgB,CAACI,cAAD,CAAhB;AACA,UAAIE,MAAM,GAAG,IAAIC,IAAJ,CAASP,gBAAgB,CAACI,cAAD,CAAhB,CAAiCV,OAA1C,CAAb;AACA,UAAIc,MAAM,GAAG,IAAID,IAAJ,CAASP,gBAAgB,CAACI,cAAD,CAAhB,CAAiCZ,MAA1C,CAAb;AACAlB,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBkC,QAAQ,CAACN,IAAT,CAAcO,KAAlC;AAEA7B,MAAAA,YAAY,CAAC8B,SAAD,CAAZ;AACAtB,MAAAA,OAAO,CAACuB,IAAI,CAACC,KAAL,CAAWb,gBAAgB,CAACI,cAAD,CAAhB,CAAiChB,IAA5C,CAAD,CAAP;AACAD,MAAAA,UAAU,CAACa,gBAAgB,CAACI,cAAD,CAAhB,CAAiCU,MAAlC,CAAV;AACAvB,MAAAA,YAAY,CAACS,gBAAgB,CAACI,cAAD,CAAhB,CAAiCW,UAAlC,CAAZ;AACApB,MAAAA,UAAU,CAACW,MAAM,CAACU,kBAAP,CAA0B,OAA1B,CAAD,CAAV;AACAvB,MAAAA,SAAS,CAACe,MAAM,CAACQ,kBAAP,CAA0B,OAA1B,CAAD,CAAT;AACH,KAfD,MAeK;AACDjC,MAAAA,SAAS,CAACoB,IAAI,CAAC9B,GAAN,CAAT;AACH,KAnB+B,CAoBhC;;AAED,GAtBD;;AAwBA,QAAM4C,mBAAmB,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACpC,QAAIC,GAAJ;;AACA,YAAQF,CAAR;AACE,WAAK,CAAL;AACEE,QAAAA,GAAG,GAAG,WAAW,GAAX,GAAiBC,MAAM,CAACF,CAAC,CAACG,OAAF,EAAD,CAAN,CAAoBC,QAApB,CAA6B,CAA7B,EAAgC,GAAhC,CAAvB;AACA,eAAOH,GAAP;;AACF,WAAK,CAAL;AACEA,QAAAA,GAAG,GAAG,WAAW,GAAX,GAAiBC,MAAM,CAACF,CAAC,CAACG,OAAF,EAAD,CAAN,CAAoBC,QAApB,CAA6B,CAA7B,EAAgC,GAAhC,CAAvB;AACA,eAAOH,GAAP;;AACF,WAAK,CAAL;AACEA,QAAAA,GAAG,GAAG,YAAY,GAAZ,GAAkBC,MAAM,CAACF,CAAC,CAACG,OAAF,EAAD,CAAN,CAAoBC,QAApB,CAA6B,CAA7B,EAAgC,GAAhC,CAAxB;AACA,eAAOH,GAAP;;AACF,WAAK,CAAL;AACEA,QAAAA,GAAG,GAAG,cAAc,GAAd,GAAoBC,MAAM,CAACF,CAAC,CAACG,OAAF,EAAD,CAAN,CAAoBC,QAApB,CAA6B,CAA7B,EAAgC,GAAhC,CAA1B;AACA,eAAOH,GAAP;;AACF,WAAK,CAAL;AACEA,QAAAA,GAAG,GAAG,aAAa,GAAb,GAAmBC,MAAM,CAACF,CAAC,CAACG,OAAF,EAAD,CAAN,CAAoBC,QAApB,CAA6B,CAA7B,EAAgC,GAAhC,CAAzB;AACA,eAAOH,GAAP;;AACF,WAAK,CAAL;AACEA,QAAAA,GAAG,GAAG,WAAW,GAAX,GAAiBC,MAAM,CAACF,CAAC,CAACG,OAAF,EAAD,CAAN,CAAoBC,QAApB,CAA6B,CAA7B,EAAgC,GAAhC,CAAvB;AACA,eAAOH,GAAP;;AACF,WAAK,CAAL;AACEA,QAAAA,GAAG,GAAG,aAAa,GAAb,GAAmBC,MAAM,CAACF,CAAC,CAACG,OAAF,EAAD,CAAN,CAAoBC,QAApB,CAA6B,CAA7B,EAAgC,GAAhC,CAAzB;AACA,eAAOH,GAAP;AArBJ;AAuBD,GAzBD;;AA2BA,QAAMf,mBAAmB,GAAIF,IAAD,IAAU;AAClC,QAAGA,IAAI,CAACqB,OAAL,CAAa,QAAb,CAAH,EAA0B;AACtB,aAAO,CAAP;AACH,KAFD,MAEM,IAAGrB,IAAI,CAACqB,OAAL,CAAa,QAAb,CAAH,EAA0B;AAC5B,aAAO,CAAP;AACH,KAFK,MAEA,IAAGrB,IAAI,CAACqB,OAAL,CAAa,SAAb,CAAH,EAA2B;AAC9B,aAAO,CAAP;AACF,KAFK,MAEA,IAAGrB,IAAI,CAACqB,OAAL,CAAa,WAAb,CAAH,EAA6B;AACjC,aAAO,CAAP;AACH,KAFO,MAEF,IAAGrB,IAAI,CAACqB,OAAL,CAAa,UAAb,CAAH,EAA4B;AAC9B,aAAO,CAAP;AACH,KAFK,MAEA,IAAGrB,IAAI,CAACqB,OAAL,CAAa,QAAb,CAAH,EAA0B;AAC5B,aAAO,CAAP;AACH,KAFK,MAEA,IAAGrB,IAAI,CAACqB,OAAL,CAAa,UAAb,CAAH,EAA4B;AAC9B,aAAO,CAAP;AACH;AAGF,GAlBD;;AAoBA,QAAMC,OAAO,GAAIC,QAAD,IAAc;AAC5B,UAAMC,QAAQ,GAAGD,QAAQ,CAACE,MAAT,CAAgBD,QAAjC;AACA,UAAME,SAAS,GAAGH,QAAQ,CAACE,MAAT,CAAgBC,SAAlC;AACA,QAAIlB,SAAS,GAAG,EAAhB;AACA,QAAImB,WAAW,GAAG,EAAlB;AACAA,IAAAA,WAAW,CAACC,GAAZ,GAAkBJ,QAAlB;AACAG,IAAAA,WAAW,CAACE,GAAZ,GAAkBH,SAAlB;AACA,QAAIV,CAAJ;AACA,QAAID,CAAJ;AACA,QAAIE,GAAJ;AACA,QAAId,MAAJ;AACA,QAAIE,MAAJ;AACAvC,IAAAA,UAAU,CAAC6D,WAAD,CAAV,CACGG,IADH,CACSxB,QAAD,IAAc;AAClBxB,MAAAA,WAAW,CAACwB,QAAQ,CAACN,IAAT,CAAc+B,QAAf,CAAX;AACAzB,MAAAA,QAAQ,CAACN,IAAT,CAAcO,KAAd,CAAoByB,GAApB,CAAwB,CAACC,MAAD,EAASC,CAAT,KAAe;AACrClB,QAAAA,CAAC,GAAG,IAAIZ,IAAJ,CAAS6B,MAAM,CAACE,EAAP,GAAY,IAArB,CAAJ;AACApB,QAAAA,CAAC,GAAGC,CAAC,CAACoB,MAAF,EAAJ;AACAnB,QAAAA,GAAG,GAAGH,mBAAmB,CAACC,CAAD,EAAIC,CAAJ,CAAzB;;AACA,YAAIkB,CAAC,KAAK,CAAV,EAAa;AACX1B,UAAAA,SAAS,CAAC6B,IAAV,CAAepB,GAAf;AACD;AACF,OAPD;;AASA,UAAGtC,MAAM,KAAK,SAAd,EAAwB;AACpBwB,QAAAA,MAAM,GAAG,IAAIC,IAAJ,CAASE,QAAQ,CAACN,IAAT,CAAcsC,OAAd,CAAsB/C,OAA/B,CAAT;AACAc,QAAAA,MAAM,GAAG,IAAID,IAAJ,CAASE,QAAQ,CAACN,IAAT,CAAcsC,OAAd,CAAsBjD,MAA/B,CAAT;AAEAX,QAAAA,YAAY,CAAC8B,SAAD,CAAZ;AACAtB,QAAAA,OAAO,CAACuB,IAAI,CAACC,KAAL,CAAWJ,QAAQ,CAACN,IAAT,CAAcsC,OAAd,CAAsBrD,IAAjC,CAAD,CAAP;AACAD,QAAAA,UAAU,CAACsB,QAAQ,CAACN,IAAT,CAAcsC,OAAd,CAAsB3B,MAAvB,CAAV;AACAvB,QAAAA,YAAY,CAACkB,QAAQ,CAACN,IAAT,CAAcsC,OAAd,CAAsB1B,UAAvB,CAAZ;AACApB,QAAAA,UAAU,CAACW,MAAM,CAACU,kBAAP,CAA0B,OAA1B,CAAD,CAAV;AACAvB,QAAAA,SAAS,CAACe,MAAM,CAACQ,kBAAP,CAA0B,OAA1B,CAAD,CAAT;AAEH,OAXD,MAWM,IAAGlC,MAAM,KAAK,SAAX,IAAwBA,MAAM,KAAK,QAAtC,EAA+C;AACjDR,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBqB,SAAnB;AACA,YAAIQ,cAAc,GAAGC,mBAAmB,CAACT,SAAS,CAACvB,GAAX,CAAxC;AACA4B,QAAAA,uBAAuB,CAACQ,QAAQ,CAACN,IAAT,CAAcO,KAAf,CAAvB,CAHiD,CAIjD;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEH;;AAGDpC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBqC,IAAI,CAACC,KAAL,CAAWJ,QAAQ,CAACN,IAAT,CAAcsC,OAAd,CAAsBrD,IAAjC,CAAxB;AACAd,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBoC,SAAzB;AACD,KA3CH,EA4CG+B,KA5CH,CA4CUC,KAAD,IAAW;AAChBrE,MAAAA,OAAO,CAACC,GAAR,CAAYoE,KAAZ;AACD,KA9CH;AAgDArE,IAAAA,OAAO,CAACC,GAAR,CAAYoD,QAAZ,EAAsBE,SAAtB;AACD,GA7DD;;AA8DA,QAAMc,KAAK,GAAG,MAAM;AAClBC,IAAAA,KAAK,CAAC,kCAAD,CAAL;AACD,GAFD;;AAIA9E,EAAAA,SAAS,CAAC,MAAM;AACd+E,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCtB,OAAzC,EAAkDkB,KAAlD;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA,4BACE,QAAC,QAAD;AAEE,MAAA,YAAY,EAAC,SAFf;AAGE,MAAA,IAAI,EAAEjE,UAHR;AAIE,MAAA,eAAe,EAAGyB,IAAD,IAAU;AACzBD,QAAAA,eAAe,CAACC,IAAD,CAAf;AACD;AANH,OACM,SADN;AAAA;AAAA;AAAA;AAAA,YADF,eASE,QAAC,QAAD;AAEE,MAAA,YAAY,EAAC,OAFf;AAGE,MAAA,IAAI,EAAEvB,SAHR;AAIE,MAAA,eAAe,EAAGuB,IAAD,IAAU;AACvBD,QAAAA,eAAe,CAACC,IAAD,CAAf;AACH;AANH,OACM,OADN;AAAA;AAAA;AAAA;AAAA,YATF,eAiBE,QAAC,QAAD;AAAuB,MAAA,YAAY,EAAC;AAApC,OAAc,QAAd;AAAA;AAAA;AAAA;AAAA,YAjBF,eAkBE;AAAA,gBAAKnB;AAAL;AAAA;AAAA;AAAA;AAAA,YAlBF,eAoBE,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEZ,QAApB;AAAA,gBACGU,MAAM,KAAK,SAAX,gBAGC,QAAC,KAAD;AAAO,QAAA,MAAM,EAAEA,MAAM,CAAC,CAAD,CAAN,CAAUkE,WAAV,KAA0BlE,MAAM,CAACmE,KAAP,CAAa,CAAb,EAAgBC,WAAhB,EAAzC;AAAA,+BACE;AAAA,oBAAI,SAAS,GAAT,GAAc9D,IAAd,GAAqB,GAArB,GAAyB,IAAzB,GAA8B,QAA9B,GAAwC,GAAxC,GAA8CF,OAA9C,GAAuD,IAAvD,GAA4D,SAA5D,GAAsE,GAAtE,GAA0EQ,OAA1E,GAAkF,IAAlF,GAAuF,QAAvF,GAAgG,IAAhG,GAAqGF,MAArG,GAA4G,IAA5G,GAAiH,YAAjH,GAA8H,IAA9H,GAAmIF;AAAvI;AAAA;AAAA;AAAA;AAAA;AADF,SAA4E,GAA5E;AAAA;AAAA;AAAA;AAAA,cAHD,GAQDR,MAAM,KAAK,QAAX,GAEI,EAFJ,gBAKI,QAAC,KAAD;AAAO,QAAA,MAAM,EAAEA,MAAM,CAAC,CAAD,CAAN,CAAUkE,WAAV,KAA0BlE,MAAM,CAACmE,KAAP,CAAa,CAAb,EAAgBC,WAAhB,EAAzC;AAAA,+BACI;AAAA,oBAAI,SAAS,GAAT,GAAc9D,IAAd,GAAqB,GAArB,GAAyB,IAAzB,GAA8B,QAA9B,GAAwC,GAAxC,GAA8CF,OAA9C,GAAuD,IAAvD,GAA4D,SAA5D,GAAsE,GAAtE,GAA0EQ,OAA1E,GAAkF,IAAlF,GAAuF,QAAvF,GAAgG,IAAhG,GAAqGF,MAArG,GAA4G,IAA5G,GAAiH,YAAjH,GAA8H,IAA9H,GAAmIF;AAAvI;AAAA;AAAA;AAAA;AAAA;AADJ,SAA4E,GAA5E;AAAA;AAAA;AAAA;AAAA;AAdN;AAAA;AAAA;AAAA;AAAA,YApBF;AAAA,kBADF;AA6DD,CA1ND;;GAAMb,oB;;KAAAA,oB;AA2NN,eAAeA,oBAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Collapse } from \"antd\";\nimport { getWeather } from \"../API/api-services\";\nimport DropDown from \"./share/dropdown\";\nconst { Panel } = Collapse;\nfunction callback(key) {\n  console.log(key);\n}\nconst text = `\n  A dog is a type of domesticated animal.\n  Known for its loyalty and faithfulness,\n  it can be found as a welcome guest in many households across the world.\n`;\nconst CurrentWeatherForcst = ({}) => {\n  const [curentItem, setCurentItem] = useState([\"current\"]);\n  const [dailyItem, setDailyItem] = useState([]);\n  const [header, setHeader] = useState(\"current\");\n  const [location, setLocation] = useState(\"\");\n  const [cloudes, setCloudes] = useState(\"\");\n  const [temp, setTemp] = useState(\"\");\n  const [windSpeed, setwindSpeed] = useState(\"\");\n  const [sunset, setSunset] = useState(\"\");\n  const [sunrise, setSunrise] = useState(\"\");\n  const [dailyData, setDailyDate] = useState(\"\");\n\n\n  const [currWeatherData, setcurrWeatherData] = useState(\"\");\n  const [dailyWeatherData, setcurrdailyWeatherData] = useState(\"\");\n\n  const callbackForMenu = (data) => {\n    // console.log(\"data\", data);\n    if(data.key !== \"current\" || data.key !== \"weekly\"){\n        setHeader(\"Daily\")\n        setDailyDate(data.key)\n        let relatedNoOfDay = getArrayIndexForDay(dailyData.key)\n        dailyWeatherData[relatedNoOfDay]\n        let event1 = new Date(dailyWeatherData[relatedNoOfDay].sunrise)\n        let event2 = new Date(dailyWeatherData[relatedNoOfDay].sunset);\n        console.log(\"daily\",response.data.daily)\n        \n        setDailyItem(ItemArray);\n        setTemp(Math.round(dailyWeatherData[relatedNoOfDay].temp))\n        setCloudes(dailyWeatherData[relatedNoOfDay].clouds)\n        setwindSpeed(dailyWeatherData[relatedNoOfDay].wind_speed)\n        setSunrise(event1.toLocaleTimeString('en-US'))\n        setSunset(event2.toLocaleTimeString('en-US'))\n    }else{\n        setHeader(data.key);\n    }\n    // navigator.geolocation.getCurrentPosition(success, error);\n    \n  };\n\n  const GetDaYForDalilyData = (n, d) => {\n    let day;\n    switch (n) {\n      case 0:\n        day = \"Sunday\" + \" \" + String(d.getDate()).padStart(2, \"0\");\n        return day;\n      case 1:\n        day = \"Monday\" + \" \" + String(d.getDate()).padStart(2, \"0\");\n        return day;\n      case 2:\n        day = \"Tuesday\" + \" \" + String(d.getDate()).padStart(2, \"0\");\n        return day;\n      case 3:\n        day = \"Wednesday\" + \" \" + String(d.getDate()).padStart(2, \"0\");\n        return day;\n      case 4:\n        day = \"Thursday\" + \" \" + String(d.getDate()).padStart(2, \"0\");\n        return day;\n      case 5:\n        day = \"Friday\" + \" \" + String(d.getDate()).padStart(2, \"0\");\n        return day;\n      case 6:\n        day = \"Saturday\" + \" \" + String(d.getDate()).padStart(2, \"0\");\n        return day;\n    }\n  };\n\n  const getArrayIndexForDay = (data) => {\n      if(data.include(\"Sunday\")){\n          return 0\n      }else if(data.include(\"Monday\")){\n          return 1\n      }else if(data.include(\"Tuesday\")){\n         return 2\n      }else if(data.include(\"Wednesday\")){\n        return 3\n    }else if(data.include(\"Thursday\")){\n        return 4\n    }else if(data.include(\"Friday\")){\n        return 5\n    }else if(data.include(\"Saturday\")){\n        return 6\n    }\n\n\n  }\n\n  const success = (position) => {\n    const latitude = position.coords.latitude;\n    const longitude = position.coords.longitude;\n    let ItemArray = [];\n    let queryParams = {};\n    queryParams.lat = latitude;\n    queryParams.lon = longitude;\n    let d;\n    let n;\n    let day;\n    let event1\n    let event2\n    getWeather(queryParams)\n      .then((response) => {\n        setLocation(response.data.timezone);\n        response.data.daily.map((result, i) => {\n          d = new Date(result.dt * 1000);\n          n = d.getDay();\n          day = GetDaYForDalilyData(n, d);\n          if (i !== 7) {\n            ItemArray.push(day);\n          }\n        });\n\n        if(header === \"current\"){\n            event1 = new Date(response.data.current.sunrise);\n            event2 = new Date(response.data.current.sunset);\n            \n            setDailyItem(ItemArray);\n            setTemp(Math.round(response.data.current.temp))\n            setCloudes(response.data.current.clouds)\n            setwindSpeed(response.data.current.wind_speed)\n            setSunrise(event1.toLocaleTimeString('en-US'))\n            setSunset(event2.toLocaleTimeString('en-US'))\n\n        }else if(header !== \"current\" && header !== \"weekly\"){\n            console.log(\"test\",dailyData)\n            let relatedNoOfDay = getArrayIndexForDay(dailyData.key)\n            setcurrdailyWeatherData(response.data.daily)\n            // event1 = new Date(response.data.daily[relatedNoOfDay].sunrise)\n            // event2 = new Date(response.data.daily[relatedNoOfDay].sunset);\n            // console.log(\"daily\",response.data.daily)\n            \n            // setDailyItem(ItemArray);\n            // setTemp(Math.round(response.data.daily[relatedNoOfDay].temp))\n            // setCloudes(response.data.daily[relatedNoOfDay].clouds)\n            // setwindSpeed(response.data.daily[relatedNoOfDay].wind_speed)\n            // setSunrise(event1.toLocaleTimeString('en-US'))\n            // setSunset(event2.toLocaleTimeString('en-US'))\n\n        }\n       \n       \n        console.log(\"response\", Math.round(response.data.current.temp));\n        console.log(\"ItemArray\", ItemArray);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n    console.log(latitude, longitude);\n  };\n  const error = () => {\n    alert(\"Unable to retrieve your location\");\n  };\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(success, error);\n  }, []);\n\n  return (\n    <>\n      <DropDown\n        key=\"current\"\n        DropDownText=\"Current\"\n        Item={curentItem}\n        callbackForMenu={(data) => {\n          callbackForMenu(data);\n        }}\n      />\n      <DropDown \n        key=\"daily\" \n        DropDownText=\"Daily\" \n        Item={dailyItem}\n        callbackForMenu={(data) => {\n            callbackForMenu(data);\n        }}\n     />\n      <DropDown key=\"weekly\" DropDownText=\"Weekly\" />\n      <h3>{location}</h3>\n\n      <Collapse onChange={callback}>\n        {header === \"current\"\n        ?\n        (\n          <Panel header={header[0].toUpperCase() + header.slice(1).toLowerCase()} key=\"2\">\n            <p>{\"temp\" + \" \"+ temp + \"C\"+\"  \"+\"Cloude\"+ \" \" + cloudes +\"  \"+\"Sunrise\"+\" \"+sunrise+\"  \"+\"Sunset\"+\"  \"+sunset+\"  \"+\"wind Speed\"+\"  \"+windSpeed }</p>\n          </Panel>\n        )\n        :\n        header === \"weekly\"\n            ?\n            \"\"\n            :\n            (\n            <Panel header={header[0].toUpperCase() + header.slice(1).toLowerCase()} key=\"2\">\n                <p>{\"temp\" + \" \"+ temp + \"C\"+\"  \"+\"Cloude\"+ \" \" + cloudes +\"  \"+\"Sunrise\"+\" \"+sunrise+\"  \"+\"Sunset\"+\"  \"+sunset+\"  \"+\"wind Speed\"+\"  \"+windSpeed }</p>\n            </Panel>\n            )\n\n\n        }\n        {/* {header === \"current\" && (\n          <Panel header={header[0].toUpperCase() + header.slice(1).toLowerCase()} key=\"2\">\n            <p>{\"temp\" + \" \"+ temp + \"C\"+\"  \"+\"Cloude\"+ \" \" + cloudes +\"  \"+\"Sunrise\"+\" \"+sunrise+\"  \"+\"Sunset\"+\"  \"+sunset+\"  \"+\"wind Speed\"+\"  \"+windSpeed }</p>\n          </Panel>\n        )} */}\n         {/* {header !== \"current\" || header !== \"weekly\" && (\n          <Panel header={header[0].toUpperCase() + header.slice(1).toLowerCase()} key=\"2\">\n            <p>{\"temp\" + \" \"+ temp + \"C\"+\"  \"+\"Cloude\"+ \" \" + cloudes +\"  \"+\"Sunrise\"+\" \"+sunrise+\"  \"+\"Sunset\"+\"  \"+sunset+\"  \"+\"wind Speed\"+\"  \"+windSpeed }</p>\n          </Panel>\n        )} */}\n        {/* <Panel header=\"This is panel header 2\" key=\"2\">\n          <p>{text}</p>\n        </Panel>\n        <Panel header=\"This is panel header 3\" key=\"3\">\n          <p>{text}</p>\n        </Panel> */}\n      </Collapse>\n    </>\n  );\n};\nexport default CurrentWeatherForcst;\n"]},"metadata":{},"sourceType":"module"}