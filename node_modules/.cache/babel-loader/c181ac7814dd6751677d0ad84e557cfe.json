{"ast":null,"code":"var _jsxFileName = \"/home/nupur.majumar/Desktop/weather_portal/src/component/weatherForcast.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Collapse } from \"antd\";\nimport { getWeather } from '../API/api-services';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Panel\n} = Collapse;\n\nfunction callback(key) {\n  console.log(key);\n}\n\nconst text = `\n  A dog is a type of domesticated animal.\n  Known for its loyalty and faithfulness,\n  it can be found as a welcome guest in many households across the world.\n`;\n\nconst CurrentWeatherForcst = () => {\n  _s();\n\n  const [location, setLocation] = useState(\"\");\n  const [Lon, setLon] = useState(0);\n\n  const success = position => {\n    const latitude = position.coords.latitude;\n    const longitude = position.coords.longitude;\n    let queryParams = {};\n    queryParams.lat = latitude;\n    queryParams.lon = longitude;\n    getWeather(queryParams).then(response => {\n      setLocation(response.data.timezone);\n      console.log(\"response\", response);\n    }).catch(error => {\n      console.log(error);\n    });\n    console.log(latitude, longitude);\n  };\n\n  const error = () => {\n    alert('Unable to retrieve your location');\n  };\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(success, error);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Collapse, {\n    onChange: callback,\n    children: [/*#__PURE__*/_jsxDEV(Panel, {\n      header: \"This is panel header 2\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)\n    }, \"2\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Panel, {\n      header: \"This is panel header 3\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)\n    }, \"3\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 7\n  }, this);\n};\n\n_s(CurrentWeatherForcst, \"p6ZlbNVo2s0A0nKaZ0jXKY88dUM=\");\n\n_c = CurrentWeatherForcst;\nexport default CurrentWeatherForcst;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrentWeatherForcst\");","map":{"version":3,"sources":["/home/nupur.majumar/Desktop/weather_portal/src/component/weatherForcast.js"],"names":["React","useEffect","useState","Collapse","getWeather","Panel","callback","key","console","log","text","CurrentWeatherForcst","location","setLocation","Lon","setLon","success","position","latitude","coords","longitude","queryParams","lat","lon","then","response","data","timezone","catch","error","alert","navigator","geolocation","getCurrentPosition"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,SAASC,QAAT,QAAyB,MAAzB;AACA,SAAQC,UAAR,QAAyB,qBAAzB;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAYF,QAAlB;;AACA,SAASG,QAAT,CAAkBC,GAAlB,EAAuB;AACnBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;;AACH,MAAMG,IAAI,GAAI;AACd;AACA;AACA;AACA,CAJA;;AAKA,MAAMC,oBAAoB,GAAG,MAAM;AAAA;;AAC/B,QAAM,CAACC,QAAD,EAAUC,WAAV,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACY,GAAD,EAAMC,MAAN,IAAkBb,QAAQ,CAAC,CAAD,CAAhC;;AAEA,QAAMc,OAAO,GAAIC,QAAD,IAAa;AAC7B,UAAMC,QAAQ,GAAID,QAAQ,CAACE,MAAT,CAAgBD,QAAlC;AACA,UAAME,SAAS,GAAGH,QAAQ,CAACE,MAAT,CAAgBC,SAAlC;AAEA,QAAIC,WAAW,GAAG,EAAlB;AACAA,IAAAA,WAAW,CAACC,GAAZ,GAAkBJ,QAAlB;AACAG,IAAAA,WAAW,CAACE,GAAZ,GAAkBH,SAAlB;AAEAhB,IAAAA,UAAU,CAACiB,WAAD,CAAV,CACCG,IADD,CACMC,QAAQ,IAAI;AACdZ,MAAAA,WAAW,CAACY,QAAQ,CAACC,IAAT,CAAcC,QAAf,CAAX;AACAnB,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBgB,QAAvB;AACH,KAJD,EAKCG,KALD,CAKOC,KAAK,IAAE;AACVrB,MAAAA,OAAO,CAACC,GAAR,CAAYoB,KAAZ;AACH,KAPD;AASArB,IAAAA,OAAO,CAACC,GAAR,CAAYS,QAAZ,EAAqBE,SAArB;AACC,GAlBD;;AAmBA,QAAMS,KAAK,GAAG,MAAM;AACpBC,IAAAA,KAAK,CAAC,kCAAD,CAAL;AACC,GAFD;;AAIA7B,EAAAA,SAAS,CAAC,MAAI;AACV8B,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCjB,OAAzC,EAAkDa,KAAlD;AACH,GAFQ,EAEP,EAFO,CAAT;AAKF,sBACI,QAAC,QAAD;AAAU,IAAA,QAAQ,EAAEvB,QAApB;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,MAAM,EAAC,wBAAd;AAAA,6BACE;AAAA,kBAAII;AAAJ;AAAA;AAAA;AAAA;AAAA;AADF,OAA2C,GAA3C;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,KAAD;AAAO,MAAA,MAAM,EAAC,wBAAd;AAAA,6BACE;AAAA,kBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA;AADF,OAA2C,GAA3C;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUD,CA1CD;;GAAMC,oB;;KAAAA,oB;AA2CN,eAAeA,oBAAf","sourcesContent":["import React,{useEffect,useState} from \"react\";\nimport { Collapse } from \"antd\";\nimport {getWeather} from '../API/api-services'\nconst { Panel } = Collapse;\nfunction callback(key) {\n    console.log(key);\n  }\nconst text = `\n  A dog is a type of domesticated animal.\n  Known for its loyalty and faithfulness,\n  it can be found as a welcome guest in many households across the world.\n`;\nconst CurrentWeatherForcst = () => {\n    const [location,setLocation] =  useState(\"\");\n    const [Lon, setLon ] =  useState(0);\n\n    const success = (position)=> {\n    const latitude  = position.coords.latitude;\n    const longitude = position.coords.longitude;\n\n    let queryParams = {}\n    queryParams.lat = latitude\n    queryParams.lon = longitude\n\n    getWeather(queryParams)\n    .then(response => {\n        setLocation(response.data.timezone)\n        console.log(\"response\",response)\n    })\n    .catch(error=>{\n        console.log(error)\n    })\n\n    console.log(latitude,longitude)\n    }\n    const error = () => {\n    alert('Unable to retrieve your location');\n    }\n    \n    useEffect(()=>{\n        navigator.geolocation.getCurrentPosition(success, error);\n    },[])\n\n\n  return (\n      <Collapse onChange={callback}>\n        <Panel header=\"This is panel header 2\" key=\"2\">\n          <p>{text}</p>\n        </Panel>\n        <Panel header=\"This is panel header 3\" key=\"3\">\n          <p>{text}</p>\n        </Panel>\n      </Collapse>\n  );\n};\nexport default CurrentWeatherForcst;\n"]},"metadata":{},"sourceType":"module"}