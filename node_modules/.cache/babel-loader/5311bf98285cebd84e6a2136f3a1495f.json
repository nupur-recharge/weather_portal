{"ast":null,"code":"var _jsxFileName = \"/home/nupur.majumar/Desktop/weather_portal/src/component/share/dropdown.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Menu, Dropdown, Button, message, Space, Tooltip } from \"antd\";\nimport { DownOutlined, UserOutlined } from \"@ant-design/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DropDown = _ref => {\n  _s();\n\n  let {\n    DropDownText,\n    Item\n  } = _ref;\n  const [item, setItem] = useState(Item);\n  let menu;\n  console.log(\"menue\", Item);\n\n  const handleButtonClick = e => {\n    message.info(\"Click on left button.\");\n    console.log(\"click left button\", e);\n  };\n\n  const handleMenuClick = e => {\n    message.info(\"Click on menu item.\"); // console.log(\"click\", e);\n  };\n\n  let test = [Item];\n  useEffect(() => {\n    console.log(\"test\", Item);\n    console.log(Array.isArray([Item]));\n\n    if (Item != undefined) {\n      let Item = [\"5\", \"6\", \"9\"];\n    } // let test = [Item];\n\n  }, [Item !== undefined]);\n  menu = /*#__PURE__*/_jsxDEV(Menu, {\n    onClick: handleMenuClick\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Space, {\n    wrap: true,\n    children: /*#__PURE__*/_jsxDEV(Dropdown.Button, {\n      // onClick={handleButtonClick}\n      overlay: menu !== undefined && menu,\n      children: DropDownText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DropDown, \"1/8z9VPD7JT6QqVWIEDopWpGVAc=\");\n\n_c = DropDown;\nexport default DropDown;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropDown\");","map":{"version":3,"sources":["/home/nupur.majumar/Desktop/weather_portal/src/component/share/dropdown.js"],"names":["React","useEffect","useState","Menu","Dropdown","Button","message","Space","Tooltip","DownOutlined","UserOutlined","DropDown","DropDownText","Item","item","setItem","menu","console","log","handleButtonClick","e","info","handleMenuClick","test","Array","isArray","undefined"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,MAAzB,EAAiCC,OAAjC,EAA0CC,KAA1C,EAAiDC,OAAjD,QAAgE,MAAhE;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,mBAA3C;;;AAEA,MAAMC,QAAQ,GAAG,QAA2B;AAAA;;AAAA,MAA1B;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,GAA0B;AAC1C,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBb,QAAQ,CAACW,IAAD,CAA/B;AACA,MAAIG,IAAJ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBL,IAApB;;AACA,QAAMM,iBAAiB,GAAIC,CAAD,IAAO;AAC/Bd,IAAAA,OAAO,CAACe,IAAR,CAAa,uBAAb;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCE,CAAjC;AACD,GAHD;;AAKA,QAAME,eAAe,GAAIF,CAAD,IAAO;AAC7Bd,IAAAA,OAAO,CAACe,IAAR,CAAa,qBAAb,EAD6B,CAE7B;AACD,GAHD;;AAMA,MAAIE,IAAI,GAAG,CAACV,IAAD,CAAX;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBL,IAAnB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYM,KAAK,CAACC,OAAN,CAAc,CAACZ,IAAD,CAAd,CAAZ;;AACA,QAAGA,IAAI,IAAIa,SAAX,EAAqB;AACjB,UAAIb,IAAI,GAAG,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,CAAX;AAGH,KAPa,CASd;;AAGD,GAZQ,EAYN,CAACA,IAAI,KAAKa,SAAV,CAZM,CAAT;AAcAV,EAAAA,IAAI,gBAEF,QAAC,IAAD;AAAM,IAAA,OAAO,EAAEM;AAAf;AAAA;AAAA;AAAA;AAAA,UAFF;AAqCA,sBACE,QAAC,KAAD;AAAO,IAAA,IAAI,MAAX;AAAA,2BACE,QAAC,QAAD,CAAU,MAAV;AACE;AACA,MAAA,OAAO,EAAEN,IAAI,KAAKU,SAAT,IAAsBV,IAFjC;AAAA,gBAIGJ;AAJH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CA9ED;;GAAMD,Q;;KAAAA,Q;AAgFN,eAAeA,QAAf","sourcesContent":["import React, { useEffect,useState} from \"react\";\nimport { Menu, Dropdown, Button, message, Space, Tooltip } from \"antd\";\nimport { DownOutlined, UserOutlined } from \"@ant-design/icons\";\n\nconst DropDown = ({ DropDownText, Item}) => {\n  const [item,setItem] = useState(Item)\n  let menu;\n  console.log(\"menue\",Item)\n  const handleButtonClick = (e) => {\n    message.info(\"Click on left button.\");\n    console.log(\"click left button\", e);\n  };\n\n  const handleMenuClick = (e) => {\n    message.info(\"Click on menu item.\");\n    // console.log(\"click\", e);\n  };\n\n \n  let test = [Item];\n \n  useEffect(() => {\n    console.log(\"test\",Item)\n    console.log(Array.isArray([Item]))\n    if(Item != undefined){\n        let Item = [\"5\",\"6\",\"9\"]\n        \n\n    }\n   \n    // let test = [Item];\n    \n   \n  }, [Item !== undefined]);\n\n  menu = (\n        \n    <Menu onClick={handleMenuClick}>\n      {/* {\n        //console.log(\"Item\",Item)\n\n        Item.map((result) => {\n\n            return(\n              <>\n              <Menu.Item key={result} icon={<UserOutlined />}>\n                {result}\n                {console.log(\"result\",result)}\n              </Menu.Item>\n            </>\n            \n\n            )\n          \n        })\n        \n      } */}\n\n      {/* <Menu.Item key=\"1\" icon={<UserOutlined />}>\n          1st menu item\n        </Menu.Item>\n        <Menu.Item key=\"2\" icon={<UserOutlined />}>\n          2nd menu item\n        </Menu.Item>\n        <Menu.Item key=\"3\" icon={<UserOutlined />}>\n          3rd menu item\n        </Menu.Item> */}\n    </Menu>\n  );\n\n \n\n  return (\n    <Space wrap>\n      <Dropdown.Button\n        // onClick={handleButtonClick}\n        overlay={menu !== undefined && menu}\n      >\n        {DropDownText}\n      </Dropdown.Button>\n    </Space>\n  );\n};\n\nexport default DropDown;\n"]},"metadata":{},"sourceType":"module"}