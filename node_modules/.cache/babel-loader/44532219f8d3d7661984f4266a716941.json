{"ast":null,"code":"var _jsxFileName = \"/home/nupur.majumar/Desktop/weather_portal/src/component/weatherForcast.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Collapse } from \"antd\";\nimport { getWeather } from \"../API/api-services\";\nimport DropDown from './share/dropdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Panel\n} = Collapse;\n\nfunction callback(key) {\n  console.log(key);\n}\n\nconst text = `\n  A dog is a type of domesticated animal.\n  Known for its loyalty and faithfulness,\n  it can be found as a welcome guest in many households across the world.\n`;\n\nconst CurrentWeatherForcst = _ref => {\n  _s();\n\n  let {} = _ref;\n  const [curentItem, setCurentItem] = useState([\"current\"]);\n  const [dailyItem, setDailyItem] = useState([]);\n  const [location, setLocation] = useState(\"\");\n  const [cloudes, setCloudes] = useState(\"\");\n  const [temp, setTemp] = useState(\"\");\n  const [windSpeed, setwindSpeed] = useState(\"\");\n  const [currWeatherData, setcurrWeatherData] = useState(\"\");\n  const [dailyWeatherData, setcurrdailyWeatherData] = useState(\"\");\n\n  callback = data => {\n    console.log(\"data\", data);\n  };\n\n  const GetDaYForDalilyData = (n, d) => {\n    switch (n) {\n      case 0:\n        day = \"Sunday\" + \" \" + String(d.getDate()).padStart(2, '0');\n        return day;\n\n      case 1:\n        day = \"Monday\" + \" \" + String(d.getDate()).padStart(2, '0');\n        return day;\n\n      case 2:\n        day = \"Tuesday\" + \" \" + String(d.getDate()).padStart(2, '0');\n        return day;\n\n      case 3:\n        day = \"Wednesday\" + \" \" + String(d.getDate()).padStart(2, '0');\n        return day;\n\n      case 4:\n        day = \"Thursday\" + \" \" + String(d.getDate()).padStart(2, '0');\n        return day;\n\n      case 5:\n        day = \"Friday\" + \" \" + String(d.getDate()).padStart(2, '0');\n        return day;\n\n      case 6:\n        day = \"Saturday\" + \" \" + String(d.getDate()).padStart(2, '0');\n        return day;\n    }\n  };\n\n  const success = position => {\n    const latitude = position.coords.latitude;\n    const longitude = position.coords.longitude;\n    let ItemArray = [];\n    let queryParams = {};\n    queryParams.lat = latitude;\n    queryParams.lon = longitude;\n    let d;\n    let n;\n    let day;\n    getWeather(queryParams).then(response => {\n      setLocation(response.data.timezone);\n      response.data.daily.map((result, i) => {\n        d = new Date(result.dt * 1000);\n        n = d.getDay();\n        day = GetDaYForDalilyData(n, d);\n\n        if (i !== 7) {\n          ItemArray.push(day);\n        }\n      }); // setItem(response.data.current.daily)\n\n      setDailyItem(ItemArray);\n      console.log(\"response\", response.data.daily);\n      console.log(\"ItemArray\", ItemArray);\n    }).catch(error => {\n      console.log(error);\n    });\n    console.log(latitude, longitude);\n  };\n\n  const error = () => {\n    alert(\"Unable to retrieve your location\");\n  };\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(success, error);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DropDown, {\n      DropDownText: \"Current\",\n      Item: curentItem,\n      handleButtonClick: data => {\n        callBack(data);\n      }\n    }, \"current\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DropDown, {\n      DropDownText: \"Daily\",\n      Item: dailyItem\n    }, \"daily\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DropDown, {\n      DropDownText: \"Weekly\"\n    }, \"weekly\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n      onChange: callback,\n      children: [/*#__PURE__*/_jsxDEV(Panel, {\n        header: \"This is panel header 2\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, \"2\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Panel, {\n        header: \"This is panel header 3\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, \"3\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CurrentWeatherForcst, \"+S0abnWqzCLt9+owaQq7X2Oiroo=\");\n\n_c = CurrentWeatherForcst;\nexport default CurrentWeatherForcst;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrentWeatherForcst\");","map":{"version":3,"sources":["/home/nupur.majumar/Desktop/weather_portal/src/component/weatherForcast.js"],"names":["React","useEffect","useState","Collapse","getWeather","DropDown","Panel","callback","key","console","log","text","CurrentWeatherForcst","curentItem","setCurentItem","dailyItem","setDailyItem","location","setLocation","cloudes","setCloudes","temp","setTemp","windSpeed","setwindSpeed","currWeatherData","setcurrWeatherData","dailyWeatherData","setcurrdailyWeatherData","data","GetDaYForDalilyData","n","d","day","String","getDate","padStart","success","position","latitude","coords","longitude","ItemArray","queryParams","lat","lon","then","response","timezone","daily","map","result","i","Date","dt","getDay","push","catch","error","alert","navigator","geolocation","getCurrentPosition","callBack"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Collapse } from \"antd\";\nimport { getWeather } from \"../API/api-services\";\nimport DropDown from './share/dropdown'\nconst { Panel } = Collapse;\nfunction callback(key) {\n  console.log(key);\n}\nconst text = `\n  A dog is a type of domesticated animal.\n  Known for its loyalty and faithfulness,\n  it can be found as a welcome guest in many households across the world.\n`;\nconst CurrentWeatherForcst = ({}) => {\n  const [curentItem, setCurentItem] = useState([\"current\"]); \n  const [dailyItem, setDailyItem] = useState([]);  \n  const [location, setLocation] = useState(\"\");\n  const [cloudes, setCloudes] = useState(\"\");\n  const [temp, setTemp] = useState(\"\");\n  const [windSpeed, setwindSpeed] = useState(\"\");\n  const [currWeatherData, setcurrWeatherData] = useState(\"\");\n  const [dailyWeatherData, setcurrdailyWeatherData] = useState(\"\");\n\n  callback = (data) => {\n    console.log(\"data\",data)\n  }\n\n  const GetDaYForDalilyData = (n,d) => {\n    switch (n) {\n        case 0:\n          day = \"Sunday\"+ \" \" +String(d.getDate()).padStart(2, '0');\n          return day;\n        case 1:\n          day = \"Monday\" + \" \" +String(d.getDate()).padStart(2, '0');\n          return day ;\n        case 2:\n          day = \"Tuesday\" + \" \" +String(d.getDate()).padStart(2, '0');\n          return day;\n        case 3:\n          day = \"Wednesday\" + \" \" +String(d.getDate()).padStart(2, '0');\n          return day;\n        case 4:\n          day = \"Thursday\" + \" \" +String(d.getDate()).padStart(2, '0');\n          return day;\n        case 5:\n          day = \"Friday\" + \" \" +String(d.getDate()).padStart(2, '0');\n          return day;\n        case 6:\n          day = \"Saturday\" + \" \" +String(d.getDate()).padStart(2, '0');\n          return day\n      }\n      \n\n  }\n\n\n  const success = (position) => {\n    const latitude = position.coords.latitude;\n    const longitude = position.coords.longitude;\n    let ItemArray = []\n    let queryParams = {};\n    queryParams.lat = latitude;\n    queryParams.lon = longitude;\n    let d \n    let n\n    let day\n\n    \n    getWeather(queryParams)\n      .then((response) => {\n        setLocation(response.data.timezone);\n        response.data.daily.map((result,i) => {\n            d = new Date(result.dt*1000);\n            n = d.getDay();\n            day = GetDaYForDalilyData(n,d)\n            if(i !== 7){\n                ItemArray.push(day)\n            }\n        })\n        // setItem(response.data.current.daily)\n        setDailyItem(ItemArray)\n        console.log(\"response\", response.data.daily);\n        console.log(\"ItemArray\",ItemArray)\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n    console.log(latitude, longitude);\n  };\n  const error = () => {\n    alert(\"Unable to retrieve your location\");\n  };\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(success, error);\n  }, []);\n\n  return (\n    <>\n      <DropDown key = \"current\" DropDownText=\"Current\" Item={curentItem} handleButtonClick = {(data)=>{callBack(data)}}/>\n      <DropDown key = \"daily\" DropDownText=\"Daily\" Item={dailyItem}/>\n      <DropDown key = \"weekly\" DropDownText=\"Weekly\" />\n\n      <Collapse onChange={callback}>\n        <Panel header=\"This is panel header 2\" key=\"2\">\n          <p>{text}</p>\n        </Panel>\n        <Panel header=\"This is panel header 3\" key=\"3\">\n          <p>{text}</p>\n        </Panel>\n      </Collapse>\n    </>\n  );\n};\nexport default CurrentWeatherForcst;\n"]},"metadata":{},"sourceType":"module"}